(* THIS FILE IS AUTOGENERATED -> DO NOT EDIT OR YOUR EDITS WILL BE LOST! *)
let introspect_xml = "
@QUOTED_INTROSPECT_XML@
"

let dbus_filter obj_path_ bus msg =
	let params     = DBus.Message.get msg in
	let msg_method = match DBus.Message.get_member msg with None -> "" | Some m -> m in
	let interface  = match DBus.Message.get_interface msg with None -> "" | Some i -> i in
	let path       = match DBus.Message.get_path msg with None -> "" | Some p -> p in
	let process_method_call msg =
		Some (match interface, msg_method, params with
		      | "org.freedesktop.DBus.Introspectable", "Introspect", _ ->
				let m = DBus.Message.new_method_return msg in
				DBus.Message.append m [DBus.String introspect_xml];
				m
@METHOD_HANDLER_STUBS@
		      | _, _, _ -> DBus.Message.new_error msg DBus.ERR_UNKNOWN_METHOD "no such method"
		     )
	in
	let process_message msg =
		if path <> obj_path_
		then None
		else (
			match DBus.Message.get_type msg with
			| DBus.Message.Method_call ->
				  process_method_call msg
			| _ -> None
		)
	in
	let reply = process_message msg in
	(match reply with
	| Some reply -> 
		  ignore (DBus.Connection.send bus reply);
		  DBus.Connection.flush bus
	| None -> ());
	true

let @object@_export_dbus obj_path bus =
	DBus.Bus.add_match bus ("type='method_call',interface='@INTERFACE@',path='"^obj_path^"'") false;
	DBus.Bus.add_match bus ("type='method_call',interface='org.freedesktop.DBus.Introspectable',path='"^obj_path^"'") false;
	DBus.Connection.flush bus;
	DBus.Connection.add_filter bus (dbus_filter obj_path)

