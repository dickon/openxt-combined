diff -uNr dialog-1.1-20080819.orig/fr.c dialog-1.1-20080819/fr.c
--- dialog-1.1-20080819.orig/fr.c	1970-01-01 01:00:00.000000000 +0100
+++ dialog-1.1-20080819/fr.c	2010-12-10 00:21:20.972471340 +0000
@@ -0,0 +1,98 @@
+#include <dialog.h>
+#include <dlg_keys.h>
+
+#define N 50
+#define SCALE 8
+#define MIN_DY 2
+#define MAX_DY 4
+#define T 2
+
+static bool fr_enabled = FALSE;
+
+static void
+fr_draw(WINDOW *win, int yy, int xx, char c)
+{
+    int min_y, min_x, size_y, size_x;
+    int y = yy / SCALE;
+    int x = xx / SCALE;
+
+    getbegyx(win, min_y, min_x);
+    getmaxyx(win, size_y, size_x);
+
+    if (y >= T &&
+        (y < min_y || y > min_y + size_y ||
+         x < min_x || x > min_x + size_x + 1))
+        mvwaddch(stdscr, y, x, c);
+}
+
+static void
+fr_step(WINDOW *win)
+{
+    static int first = 1;
+    static bool v[N] = {FALSE};
+    static int xx[N];
+    static int yy[N];
+    static int dx[N];
+    static int dy[N];
+    int i;
+
+    if (first) {
+        srandom(time(NULL));
+        first = 0;
+    }
+
+    for (i = 0; i < N; i++)
+        if (v[i])
+            fr_draw(win, yy[i], xx[i], ' ');
+
+    for (i = 0; i < N; i++) {
+        if (v[i]) {
+            if (random() % 100 == 0)
+                dx[i] = -dx[i];
+
+            yy[i] += dy[i];
+            xx[i] += dx[i];
+
+            if (yy[i] / SCALE < 0 || yy[i] / SCALE >= LINES ||
+                xx[i] / SCALE < 0 || xx[i] / SCALE >= COLS)
+                v[i] = FALSE;
+        }
+
+        if (!v[i] && random() % LINES == 0) {
+            v[i] = TRUE;
+            yy[i] = 0;
+            xx[i] = random() % (COLS * SCALE);
+            dy[i] = MIN_DY + random() % (MAX_DY - MIN_DY + 1);
+            dx[i] = - dy[i] + random() % (dy[i] * 2);
+        }
+        
+        if (v[i])
+            fr_draw(win, yy[i], xx[i], '*');
+    }
+}
+
+void
+dlg_fr_update(WINDOW *win)
+{
+    int y, x;
+
+    getyx(win, y, x);
+    fr_step(win);
+    touchwin(win);
+    wnoutrefresh(stdscr);
+    wnoutrefresh(win);
+    wmove(win, y, x);
+    doupdate();
+}
+
+void
+dlg_fr_enable(bool enabled)
+{
+    fr_enabled = enabled;
+}
+
+bool
+dlg_fr_enabled(void)
+{
+    return fr_enabled;
+}
diff -uNr dialog-1.1-20080819.orig/makefile.in dialog-1.1-20080819/makefile.in
--- dialog-1.1-20080819.orig/makefile.in	2008-07-20 19:30:36.000000000 +0100
+++ dialog-1.1-20080819/makefile.in	2010-12-10 00:21:20.972471340 +0000
@@ -82,6 +82,7 @@
 	columns$o \
 	dlg_keys$o \
 	editbox$o \
+	fr$o \
 	inputbox$o \
 	inputstr$o \
 	menubox$o \
diff -uNr dialog-1.1-20080819.orig/msgbox.c dialog-1.1-20080819/msgbox.c
--- dialog-1.1-20080819.orig/msgbox.c	2007-03-25 21:08:23.000000000 +0100
+++ dialog-1.1-20080819/msgbox.c	2010-12-10 00:29:32.888885369 +0000
@@ -107,6 +107,14 @@
     return 0;
 }
 
+static volatile bool signal_caught = FALSE;
+
+static void
+handle_signal(int sig GCC_UNUSED)
+{
+    signal_caught = TRUE;
+}
+
 /*
  * Display a message box. Program will pause and display an "OK" button
  * if the parameter 'pauseopt' is non-zero.
@@ -155,6 +163,11 @@
     int offset = 0;
     int check;
     bool show = TRUE;
+    bool allow_fr = FALSE;
+    bool fr = FALSE;
+
+    if (getenv("DIALOG_FREEZE"))
+	allow_fr = TRUE;
 
 #ifdef KEY_RESIZE
     int req_high = height;
@@ -204,7 +217,17 @@
 		wrefresh(dialog);
 		show = FALSE;
 	    }
+
+	    if (fr)
+		dlg_fr_enable(TRUE);
+
 	    key = dlg_mouse_wgetch(dialog, &fkey);
+
+	    if (fr)
+		dlg_fr_enable(FALSE);
+	    else if (allow_fr && dlg_last_getc() == 'x')
+		fr = TRUE;
+
 	    if (dlg_result_key(key, fkey, &result))
 		break;
 
@@ -301,6 +324,28 @@
     } else {
 	show_message(dialog, prompt, offset, page, width, pauseopt);
 	wrefresh(dialog);
+
+	if (allow_fr) {
+	    signal_caught = FALSE;
+
+	    (void) signal(SIGHUP, handle_signal);
+	    (void) signal(SIGINT, handle_signal);
+	    (void) signal(SIGQUIT, handle_signal);
+	    (void) signal(SIGSEGV, handle_signal);
+
+	    while (!signal_caught) {
+		if (fr)
+		    dlg_fr_enable(TRUE);
+
+		key = dlg_mouse_wgetch(dialog, &fkey);
+
+		if (fr)
+		    dlg_fr_enable(FALSE);
+		else if (dlg_last_getc() == 'x')
+		    fr = TRUE;
+	    }
+	}
+
 	result = DLG_EXIT_OK;
     }
 
diff -uNr dialog-1.1-20080819.orig/ui_getc.c dialog-1.1-20080819/ui_getc.c
--- dialog-1.1-20080819.orig/ui_getc.c	2008-03-16 20:02:20.000000000 +0000
+++ dialog-1.1-20080819/ui_getc.c	2010-12-10 00:23:42.685485524 +0000
@@ -213,8 +213,11 @@
     int interval = dialog_vars.timeout_secs;
     time_t expired = time((time_t *) 0) + dialog_vars.timeout_secs;
     time_t current;
+    bool fr = dlg_fr_enabled();
 
-    if (dialog_state.getc_callbacks != 0)
+    if (fr)
+	wtimeout(win, 50);
+    else if (dialog_state.getc_callbacks != 0)
 	wtimeout(win, WTIMEOUT_VAL);
     else if (interval > 0)
 	wtimeout(win, interval);
@@ -235,7 +238,11 @@
 	    have_last_getc = 0;
 	    ch = ERR;
 	    *fkey = 0;
-	    code = wget_wch(win, &my_wint);
+	    do {
+		if (fr)
+		    dlg_fr_update(win);
+		code = wget_wch(win, &my_wint);
+	    } while (fr && code == ERR);
 	    my_wchar = my_wint;
 	    switch (code) {
 	    case KEY_CODE_YES:
diff -uNr dialog-1.1-20080819.orig/yesno.c dialog-1.1-20080819/yesno.c
--- dialog-1.1-20080819.orig/yesno.c	2007-02-23 21:39:34.000000000 +0000
+++ dialog-1.1-20080819/yesno.c	2010-12-10 00:34:53.924401809 +0000
@@ -55,6 +55,11 @@
     int result = DLG_EXIT_UNKNOWN;
     char *prompt = dlg_strclone(cprompt);
     const char **buttons = dlg_yes_labels();
+    bool allow_fr = FALSE;
+    bool fr = FALSE;
+
+    if (getenv("DIALOG_FREEZE"))
+	allow_fr = TRUE;
 
 #ifdef KEY_RESIZE
     int req_high = height;
@@ -91,7 +96,16 @@
     dlg_draw_buttons(dialog, height - 2, 0, buttons, button, FALSE, width);
 
     while (result == DLG_EXIT_UNKNOWN) {
+	if (fr)
+	    dlg_fr_enable(TRUE);
+
 	key = dlg_mouse_wgetch(dialog, &fkey);
+
+	if (fr)
+	    dlg_fr_enable(FALSE);
+	else if (allow_fr && dlg_last_getc() == 'x')
+	    fr = TRUE;
+
 	if (dlg_result_key(key, fkey, &result))
 	    break;
 	if ((code = dlg_char_to_button(key, buttons)) >= 0) {
