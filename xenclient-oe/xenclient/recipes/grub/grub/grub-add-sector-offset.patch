diff --git a/util/i386/pc/grub-setup.c b/util/i386/pc/grub-setup.c
index 4e2517e..f938d74 100644
--- a/util/i386/pc/grub-setup.c
+++ b/util/i386/pc/grub-setup.c
@@ -81,7 +81,8 @@ grub_refresh (void)
 static void
 setup (const char *dir,
        const char *boot_file, const char *core_file,
-       const char *root, const char *dest, int must_embed, int force, int fs_probe)
+       const char *root, const char *dest, int must_embed, int force, int fs_probe,
+       grub_disk_addr_t sector_offset)
 {
   char *boot_path, *core_path, *core_path_dev, *core_path_dev_full;
   char *boot_img, *core_img;
@@ -152,6 +153,8 @@ setup (const char *dir,
   void NESTED_FUNC_ATTR save_first_sector (grub_disk_addr_t sector, unsigned offset,
 			  unsigned length)
     {
+      sector += sector_offset;
+
       grub_util_info ("the first sector is <%llu,%u,%u>",
 		      sector, offset, length);
 
@@ -166,6 +169,8 @@ setup (const char *dir,
     {
       struct grub_boot_blocklist *prev = block + 1;
 
+      sector += sector_offset;
+
       grub_util_info ("saving <%llu,%u,%u> with the segment 0x%x",
 		      sector, offset, length, (unsigned) current_segment);
 
@@ -571,6 +576,7 @@ static struct option options[] =
     {"core-image", required_argument, 0, 'c'},
     {"directory", required_argument, 0, 'd'},
     {"device-map", required_argument, 0, 'm'},
+    {"offset-sectors", required_argument, 0, 'o'},
     {"root-device", required_argument, 0, 'r'},
     {"force", no_argument, 0, 'f'},
     {"skip-fs-probe", no_argument, 0, 's'},
@@ -596,6 +602,7 @@ DEVICE must be a GRUB device (e.g. `(hd0,1)').\n\
   -c, --core-image=FILE   use FILE as the core image [default=%s]\n\
   -d, --directory=DIR     use GRUB files in the directory DIR [default=%s]\n\
   -m, --device-map=FILE   use FILE as the device map [default=%s]\n\
+  -o, --offset-sectors=N  offset sector numbers in blocklist by N\n\
   -r, --root-device=DEV   use DEV as the root device [default=guessed]\n\
   -f, --force             install even if problems are detected\n\
   -s, --skip-fs-probe     do not probe for filesystems in DEVICE\n\
@@ -634,6 +641,8 @@ main (int argc, char *argv[])
   char *root_dev = 0;
   char *dest_dev;
   int must_embed = 0, force = 0, fs_probe = 1;
+  char *p;
+  grub_disk_addr_t sector_offset = 0;
 
   set_program_name (argv[0]);
 
@@ -642,7 +651,7 @@ main (int argc, char *argv[])
   /* Check for options.  */
   while (1)
     {
-      int c = getopt_long (argc, argv, "b:c:d:m:r:hVvf", options, 0);
+      int c = getopt_long (argc, argv, "b:c:d:m:o:r:hVvf", options, 0);
 
       if (c == -1)
 	break;
@@ -677,6 +686,10 @@ main (int argc, char *argv[])
 	    dev_map = xstrdup (optarg);
 	    break;
 
+	  case 'o':
+	    sector_offset = grub_strtoul (optarg, &sector_offset, 0);
+	    break;
+
 	  case 'r':
 	    if (root_dev)
 	      free (root_dev);
@@ -793,7 +806,8 @@ main (int argc, char *argv[])
 	  setup (dir ? : DEFAULT_DIRECTORY,
 		 boot_file ? : DEFAULT_BOOT_FILE,
 		 core_file ? : DEFAULT_CORE_FILE,
-		 root_dev, grub_util_get_grub_dev (devicelist[i]), 1, force, fs_probe);
+		 root_dev, grub_util_get_grub_dev (devicelist[i]), 1, force, fs_probe,
+                 sector_offset);
 	}
     }
   else
@@ -802,7 +816,7 @@ main (int argc, char *argv[])
     setup (dir ? : DEFAULT_DIRECTORY,
 	   boot_file ? : DEFAULT_BOOT_FILE,
 	   core_file ? : DEFAULT_CORE_FILE,
-	   root_dev, dest_dev, must_embed, force, fs_probe);
+	   root_dev, dest_dev, must_embed, force, fs_probe, sector_offset);
 
   /* Free resources.  */
   grub_fini_all ();
