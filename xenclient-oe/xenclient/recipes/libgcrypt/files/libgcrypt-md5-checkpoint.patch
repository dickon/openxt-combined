diff -r 28f12604f812 cipher/md.c
--- a/cipher/md.c
+++ b/cipher/md.c
@@ -1344,6 +1344,46 @@
   return err;
 }
 
+int
+save_md5_checkpoint(FILE *f, gcry_md_hd_t *hd)
+{
+	GcryDigestEntry *entry;
+	int n;
+
+	n = (*hd)->ctx->actual_handle_size - sizeof (struct gcry_md_context);
+	if (fwrite(*hd, n, 1, f) != 1)
+		return (-1);
+	entry = (*hd)->ctx->list;
+	if (fwrite(entry->context.c, entry->digest->contextsize, 1, f) != 1)
+		return (-1);
+
+	return (0);
+}
+
+int
+load_md5_checkpoint(FILE *f, gcry_md_hd_t *hd)
+{
+	GcryDigestEntry *entry;
+	void *ctx;
+	int n;
+
+	gcry_md_open(hd, GCRY_MD_MD5, 0);
+	/* see comment above in md_open() for description of layout */
+	ctx = (*hd)->ctx;
+	n = (*hd)->ctx->actual_handle_size - sizeof (struct gcry_md_context);
+	if (fread(*hd, n, 1, f) != 1)
+		goto fail;
+	(*hd)->ctx = ctx;
+	entry = (*hd)->ctx->list;
+	if (fread(entry->context.c, entry->digest->contextsize, 1, f) != 1)
+		goto fail;
+
+	return (0);
+fail:
+	gcry_md_close(*hd);
+	return (-1);
+}
+
 
 /* Run the selftests for digest algorithm ALGO with optional reporting
    function REPORT.  */
diff -r 28f12604f812 src/gcrypt.h
--- a/src/gcrypt.h
+++ b/src/gcrypt.h
@@ -22,6 +22,7 @@
 #ifndef _GCRYPT_H
 #define _GCRYPT_H
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <stdarg.h>
 #include <string.h>
@@ -1898,6 +1899,9 @@
 #define gcry_fips_mode_active()  !!gcry_control (GCRYCTL_FIPS_MODE_P, 0)
 
 
+int save_md5_checkpoint(FILE *f, gcry_md_hd_t *hd);
+int load_md5_checkpoint(FILE *f, gcry_md_hd_t *hd);
+
 /* Include support for Libgcrypt modules.  */
 #include <gcrypt-module.h>
 
diff -r 28f12604f812 src/gcrypt.h.in
--- a/src/gcrypt.h.in
+++ b/src/gcrypt.h.in
@@ -22,6 +22,7 @@
 #ifndef _GCRYPT_H
 #define _GCRYPT_H
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <stdarg.h>
 #include <string.h>
@@ -1898,6 +1899,9 @@
 #define gcry_fips_mode_active()  !!gcry_control (GCRYCTL_FIPS_MODE_P, 0)
 
 
+int save_md5_checkpoint(FILE *f, gcry_md_hd_t *hd);
+int load_md5_checkpoint(FILE *f, gcry_md_hd_t *hd);
+
 /* Include support for Libgcrypt modules.  */
 #include <gcrypt-module.h>
 
diff -r 28f12604f812 src/libgcrypt.def
--- a/src/libgcrypt.def
+++ b/src/libgcrypt.def
@@ -237,3 +237,6 @@
       gcry_pk_get_param     @193
 
       gcry_kdf_derive       @194
+
+      save_md5_checkpoint   @195
+      load_md5_checkpoint   @196
diff -r 28f12604f812 src/libgcrypt.vers
--- a/src/libgcrypt.vers
+++ b/src/libgcrypt.vers
@@ -105,6 +105,8 @@
     gcry_mpi_subm; gcry_mpi_swap; gcry_mpi_test_bit;
     gcry_mpi_lshift;
 
+    save_md5_checkpoint; load_md5_checkpoint;
+
   local:
     *;
 
diff -r 28f12604f812 src/visibility.c
--- a/src/visibility.c
+++ b/src/visibility.c
@@ -1484,3 +1484,15 @@
 {
   _gcry_md_unregister (module);
 }
+
+int
+save_md5_checkpoint(FILE *f, gcry_md_hd_t *hd)
+{
+	_save_md5_checkpoint(f, hd);
+}
+
+int
+load_md5_checkpoint(FILE *f, gcry_md_hd_t *hd)
+{
+	_load_md5_checkpoint(f, hd);
+}
diff -r 28f12604f812 src/visibility.h
--- a/src/visibility.h
+++ b/src/visibility.h
@@ -233,6 +233,8 @@
 #define gcry_mpi_swap               _gcry_mpi_swap
 #define gcry_mpi_test_bit           _gcry_mpi_test_bit
 
+#define save_md5_checkpoint	    _save_md5_checkpoint
+#define load_md5_checkpoint	    _load_md5_checkpoint
 
 /* Include the main header here so that public symbols are mapped to
    the internal underscored ones.  */
@@ -582,7 +584,8 @@
 #undef gcry_mpi_subm
 #undef gcry_mpi_swap
 #undef gcry_mpi_test_bit
-
+#undef save_md5_checkpoint
+#undef load_md5_checkpoint
 
 /* Now mark all symbols.  */
 
@@ -799,7 +802,8 @@
 MARK_VISIBLE (gcry_mpi_swap)
 MARK_VISIBLE (gcry_mpi_test_bit)
 
-
+MARK_VISIBLE (save_md5_checkpoint)
+MARK_VISIBLE (load_md5_checkpoint)
 
 #undef MARK_VISIBLE
 #endif /*_GCRY_INCLUDED_BY_VISIBILITY_C*/
